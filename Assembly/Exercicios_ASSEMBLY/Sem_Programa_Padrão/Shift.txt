;Multiplication
;A*9 - 7

    ORG RAMStart
A   rmb 1 ;define uma var. de 1 byte

    ORG ROMStart
MAIN: clra              ;limpa o acumulador
      MOV #$FF, PTADD   ;Porta B é saída
      MOV #$00, PTADD   ;Porta A é entrada
      SEI               ;desliga interrupção
      
Loop: LDA #1          ;Carrega 1 no A
      STA PTAD        ;Salva na Porta_A
      JSR Demora      ;Vai para a função demora
      LSL PTAD        ;Shift em 1 posição para a esquerda
      JSR Demora
      LSL PTAD
      JSR Demora
      LSL PTAD
      JSR Demora
      LSL PTAD
      JSR Demora
      LSL PTAD
      JSR Demora
      LSL PTAD
      JSR Demora
      LSL PTAD
      JSR Demora
      
      JMP Loop        ;Fica em loop
       
;dbnz[a,x] -> decrement and branch if [a,x] not zero
;Função só para gastar tempo, leva = 255*255 de tempo
Demora:
        lda     #255    ;A <= 255
        ldx     #255    ;X <= 255
        dbnzx   *       ;X <= X-1, se não chegou em zero,repete
        dbnza   *-2     ;A <= A-1, se não chegou em zero, pula pra 2 linhas antes
        RTS